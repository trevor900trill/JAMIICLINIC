'use server';

/**
 * @fileOverview This file defines a Genkit flow for AI-assisted diagnosis based on patient symptoms.
 *
 * - aiAssistedDiagnosis - A function that takes patient symptoms as input and returns a list of potential diagnoses.
 * - AiAssistedDiagnosisInput - The input type for the aiAssistedDiagnosis function.
 * - AiAssistedDiagnosisOutput - The output type for the aiAssistedDiagnosis function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AiAssistedDiagnosisInputSchema = z.object({
  symptoms: z
    .string()
    .describe('A description of the patient symptoms.'),
});
export type AiAssistedDiagnosisInput = z.infer<typeof AiAssistedDiagnosisInputSchema>;

const AiAssistedDiagnosisOutputSchema = z.object({
  diagnoses: z.array(z.string()).describe('A list of potential diagnoses generated by AI.'),
});
export type AiAssistedDiagnosisOutput = z.infer<typeof AiAssistedDiagnosisOutputSchema>;

export async function aiAssistedDiagnosis(input: AiAssistedDiagnosisInput): Promise<AiAssistedDiagnosisOutput> {
  return aiAssistedDiagnosisFlow(input);
}

const prompt = ai.definePrompt({
  name: 'aiAssistedDiagnosisPrompt',
  input: {schema: AiAssistedDiagnosisInputSchema},
  output: {schema: AiAssistedDiagnosisOutputSchema},
  prompt: `You are an AI assistant designed to help doctors generate potential diagnoses based on patient symptoms.

  Based on the following symptoms, provide a list of potential diagnoses. Provide at least three possible diagnoses.

  Symptoms: {{{symptoms}}}
  `,
});

const aiAssistedDiagnosisFlow = ai.defineFlow(
  {
    name: 'aiAssistedDiagnosisFlow',
    inputSchema: AiAssistedDiagnosisInputSchema,
    outputSchema: AiAssistedDiagnosisOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
